/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

#include "custom_keys.h"

#include "zmk-helpers/helper.h"
// Source desired key-position labels
#include "zmk-helpers/key-labels/42.h"
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // Left-hand keys.
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // Right-hand keys.
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                                  // Thumb keys.

/* Left-hand HRMs. */
ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <300>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
)
ZMK_HOLD_TAP(lyl,
    flavor = "balanced";
    tapping-term-ms = <300>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    bindings = <&mo>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
)
ZMK_HOLD_TAP(hpl,
    flavor = "hold-preferred";
    tapping-term-ms = <300>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
)
/* Right-hand HRMs. */
ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <300>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;
)
ZMK_HOLD_TAP(lyr,
    flavor = "balanced";
    tapping-term-ms = <300>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    bindings = <&mo>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;
)
#define SFT_RET &hpl LSHFT RET
#define SFT_SPC &hmr RSHFT SPC

&caps_word {
  continue-list = <DE_AE DE_OE DE_UE DE_SZ DE_MINUS DE_UNDER BACKSPACE DELETE>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                base_layer_qwerty {
                         display-name = "QWERTY";
// ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
// │ BSP │  q  │  w  │  e  │  r  │  t  │   │  z  │  u  │  i  │  o  │  p  │  ü  │
// ├─ALT─┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─ALT─┤
// │ ESC │  a  │  s  │  d  │  f  │  g  │   │  h  │  j  │  k  │  l  │  ö  │  ä  │
// ├─SYM─┼─────┼─ALT─┼─GUI─┼─CTL─┼─────┤   ├─────┼─CTL─┼─GUI─┼─ALT─┼─────┼─SYM─┤
// │ APP │  y  │  x  │  c  │  v  │  b  │   │  n  │  m  │  ,  │  .  │  ß  │ RET │
// └─GUI─┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─GUI─┘
//                   │ REP │ ENT │ TAB │   │ BSP │ SPC │ DEL │
//                   └─────┴─SFT─┴─LWR─┘   └─RSE─┴─SFT─┴─────┘
                        bindings = <
   &mt  LALT BSPC  &kp DE_Q        &kp DE_W       &kp DE_E       &kp DE_R        &kp DE_T       &kp DE_Z &kp DE_U        &kp DE_I       &kp DE_O       &kp DE_P          &mt  LALT  DE_UE
   &lyl L_SYM ESC  &kp DE_A        &hml LALT DE_S &hml LGUI DE_D &hml LCTRL DE_F &kp DE_G       &kp DE_H &hmr RCTRL DE_J &hmr RGUI DE_K &hmr LALT DE_L &kp DE_OE         &lyr L_SYM DE_AE
   &mt LGUI K_APP  &lyl L_MSE DE_Y &kp DE_X       &kp DE_C       &kp DE_V        &kp DE_B       &kp DE_N &kp DE_M        &kp DE_COMMA   &kp DE_DOT     &lyr L_MSE DE_SZ  &mt  RGUI  RET
                                                            &key_repeat  SFT_RET  LOW(TAB)      RSE(BSPC)  SFT_SPC  &kp DEL
                        >;
                };

                base_layer_bone {
                        display-name = "BONE";
// ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
// │ BSP │  j  │  d  │  u  │  a  │  x  │   │  p  │  h  │  l  │  m  │  w  │  ß  │
// ├─ALT─┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─ALT─┤
// │ ESC │  c  │ A/t │ G/i │ C/e │  o  │   │  b  │ C/n │ G/r │ A/s │  g  │  q  │
// ├─SYM─┼─────┼─ALT─┼─GUI─┼─CTL─┼─────┤   ├─────┼─CTL─┼─GUI─┼─ALT─┼─────┼─SYM─┤
// │ APP │  f  │  v  │  ü  │  ä  │  ö  │   │  y  │  z  │  ,  │  .  │  k  │ RET │
// └─GUI─┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─GUI─┘
//                   │ REP │ ENT │ TAB │   │ BSP │ SPC │ DEL │
//                   └─────┴─SFT─┴─LWR─┘   └─RSE─┴─SFT─┴─────┘
                        bindings = <
   &mt  LALT BSPC  &kp DE_J        &kp DE_D       &kp DE_U       &kp DE_A        &kp DE_X       &kp DE_P &kp DE_H        &kp DE_L       &kp DE_M       &kp DE_W         &mt  LALT  DE_SZ
   &lyl L_SYM ESC  &kp DE_C        &hml LALT DE_T &hml LGUI DE_I &hml LCTRL DE_E &kp DE_O       &kp DE_B &hmr RCTRL DE_N &hmr RGUI DE_R &hmr LALT DE_S &kp DE_G         &lyr L_SYM DE_Q
   &mt LGUI K_APP  &lyl L_MSE DE_F &kp DE_V       &kp DE_UE      &kp DE_AE       &kp DE_OE      &kp DE_Y &kp DE_Z        &kp DE_COMMA   &kp DE_DOT     &lyr L_MSE DE_K  &mt  RGUI  RET
                                                            &key_repeat  SFT_RET  LOW(TAB)      RSE(BSPC)  SFT_SPC  &kp DEL
                        >;
                };

                symbol_layer {
                        display-name = "SYMBOL";
// ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
// │ ALT │  @  │  _  │  [  │  ]  │  ^  │   │  !  │  <  │  >  │  =  │  &  │ ALT │
// ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ CTL │  \  │  /  │  {  │  }  │  *  │   │  ?  │  (  │  )  │  -  │  :  │  §  │
// ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ GUI │  #  │  $  │ "|" │  ~  │  ´  │   │  +  │  %  │  "  │  '  │  ;  │ GUI │
// └─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
//                   │  °  │  §  │  ̣`  │   │ AGR │ SPC │ CAP │
//                   └─────┴─────┴─────┘   └─────┴─────┴─────┘
                        bindings = <
   &kp LALT   &kp DE_AT    &kp DE_UNDER &kp DE_LBKT  &kp DE_RBKT  &kp DE_CARET                 &kp DE_EXCL  &kp DE_LT    &kp DE_GT    &kp DE_EQUAL &kp DE_AMPS   &kp LALT
   &kp LCTRL  &kp DE_BSLH  &kp DE_FSLH  &kp DE_LBRC  &kp DE_RBRC  &kp DE_STAR                  &kp DE_QMARK &kp DE_LPAR  &kp DE_RPAR  &kp DE_MINUS &kp DE_COLON  &kp RCTRL
   &kp LGUI   &kp DE_HASH  &kp DE_DLLR  &kp DE_PIPE  &kp DE_TILDE &kp DE_ACUTE                 &kp DE_PLUS  &kp DE_PRCNT &kp DE_DQT   &kp DE_SQT   &kp DE_SEMI   &kp RGUI
                                              &kp DE_DEG   &kp DE_SECT  &kp DE_GRAVE    &sk RALT  &lt RSHFT SPC &caps_word
                        >;
                };

                lower_layer {
                        display-name = "LOWER";
// ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
// │ ALT │ F1  │ F2  │ F3  │ F4  │  £  │   │  /  │  7  │  8  │  9  │  -  │ ALT │
// ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ CTL │ F5  │ F6  │ F7  │ F8  │  €  │   │  +  │  4  │  5  │  6  │  .  │ CTL │
// ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ GUI │ F9  │ F10 │ F11 │ F12 │  ¢  │   │  0  │  1  │  2  │  3  │  ,  │ GUI │
// └─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
//                   │  ¥  │ SFT │ (x) │   │ BSP │ SPC │  $  │
//                   └─────┴─────┴─────┘   └─────┴─SFT─┴─────┘
                        bindings = <
   &kp LALT   &kp F1 &kp F2  &kp F3  &kp F4  &kp DE_GBPND    &kp DE_FSLH &kp N7   &kp N8 &kp N9 &kp DE_MINUS  &kp LALT
   &kp LCTRL  &kp F5 &kp F6  &kp F7  &kp F8  &kp DE_EURO     &kp DE_PLUS &kp N4   &kp N5 &kp N6 &kp DE_DOT    &kp RCTRL
   &kp LGUI   &kp F9 &kp F10 &kp F11 &kp F12 &kp DE_CENT     &kp N0      &kp N1   &kp N2 &kp N3 &kp DE_COMMA  &kp RGUI
                           &kp DE_YEN  &kp LSHFT  &trans     ATT(BSPC)  RSH(SPC)  &kp K_APP
                        >;
                };

                raise_layer {
                        display-name = "RAISE";
// ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
// │ ALT │ PUp │ BSP │ Up  │ Del │ PDn │   │ Prv │ Stp │ Ply │ AGr │ Nxt │ ALT │
// ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ CTL │ Hme │ Lft │ Dwn │ Rgt │ End │   │ Meh*│ Ctl*│ Gui*│ Alt*│ Sft*│ CTL │
// ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ GUI │ Esc │ Tab │ Ins │ Ret │ Udo │   │ PSc │ CAP │ Pse │ Ejt │ ScL │ GUI │
// └─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
//                   │ Prv │ V - │ Mte │   │ (x) │ V + │ Nxt │
//                   └─────┴─────┴─────┘   └─────┴─────┴─────┘
                        bindings = <
   &kp LALT   &kp PG_UP &kp BSPC    &kp UP      &kp DEL     &kp PG_DN    &kp C_PREV  &kp C_STOP &kp C_PP        &sk RALT    &kp C_NEXT  &kp LALT
   &kp LCTRL  &kp HOME  &kp LEFT    &kp DOWN    &kp RIGHT   &kp END      &sk MEH     &sk LCTRL  &sk LGUI        &sk LALT    &sk LSHFT   &kp RCTRL
   &kp LGUI   &kp ESC   &kp TAB     &kp INS     &kp RET  &kp C_AC_UNDO   &kp PSCRN   &caps_word &kp PAUSE_BREAK &kp C_EJECT &kp SLCK    &kp RGUI
                                  &kp C_PREV  &kp C_VOL_DN  ATT(C_MUTE)  &trans  &kp C_VOL_UP  &kp C_NEXT
                        >;
                };

                mouse_layer {
                        display-name = "MOUSE";
                        bindings = <
// ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
// │ ALT │ MSD │ MSL │ MUp │ MSR │ MSU │   │     │     │     │ AGr │     │ ALT │
// ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ CTL │ MB4 │ MLt │ MDn │ MRt │ MB5 │   │ Meh │ Ctl │ Gui │ Alt │ Sft │ CTL │
// ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ GUI │ TbL │ Cut │ Cpy │ Pst │     │   │     │     │     │     │ TbR │ GUI │
// └─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
//                   │     │ MB1 │ MB2 │   │ MB3 │ MB1 │     │
//                   └─────┴─────┴─────┘   └─────┴─────┴─────┘
   &kp LALT   &msc SCRL_DOWN &msc SCRL_LEFT &mmv MOVE_UP   &msc SCRL_RIGHT &msc SCRL_UP     &none   &none     &none    &sk RALT &none     &kp LALT
   &kp LCTRL  &mkp MB4       &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &mkp MB5         &sk MEH &sk LCTRL &sk LGUI &sk LALT &sk LSHFT &kp RCTRL
   &kp LGUI   TAB_PREV       &kp CCP_CUT    &kp CCP_CPY    &kp CCP_PST     &none            &none   &none     &none    &none    TAB_NEXT  &kp RGUI
                                                            &none  &mkp MB1  &mkp MB2     &mkp MB3  &mkp MB1  &none
                        >;
                };

                attic_layer {
                        display-name = "ATTIC";
                        bindings = <
// ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
// │ BtL │     │     │     │ BLy │ StL │   │  ¡  │  ‹  │  «  │  »  │  ›  │ BtL │
// ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │     │ BT0 │ BT1 │ BT2 │ BT3 │ BT4 │   │  ¿  │  •  │  ‚  │  ‘  │  ’  │ (…) │
// ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ Rst │ BCl │ BCA │ BT← │ BT→ │ OuT │   │ n-– │ m-— │  „  │  “  │  ”  │ Rst │
// └─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
//                   │     │ Br- │ (x) │   │ (x) │ Br+ │     │
//                   └─────┴─────┴─────┘   └─────┴─────┴─────┘
// | BtL |     |     |     | BLy | StL |   |  ¡  |  ‹  |  «  |  »  |  ›  | BtL |
// |     | BT0 | BT1 | BT2 | BT3 | BT4 |   |  ¿  |  •  |  ‚  |  ‘  |  ’  | (…) |
// | Rst | BCl | BCA | BT← | BT→ | OuT |   | n-– | m-— |  „  |  “  |  ”  │ Rst |
//                   |     | Br- | (x) |   | (x) | Br+ |     |
   &bootloader  &none        &none          &none       &tog BL_BONE &studio_unlock   &kp DE_IEXC &kp DE_FSQL &kp DE_FDQL &kp DE_FDQR &kp DE_FSQR  &bootloader
   &none        &bt BT_SEL 0 &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &kp DE_IQUE &kp DE_CDOT &kp DE_SQUL &kp DE_SQUR &kp DE_SQUE  &kp DE_HELL
   &sys_reset   &bt BT_CLR   &bt BT_CLR_ALL &bt BT_PRV   &bt BT_NXT   &out OUT_TOG    &kp DE_EN   &kp DE_EM   &kp DE_DQUL &kp DE_DQUR &kp DE_DQUE  &sys_reset
                                                      &none  LSH(C_BRI_DN)  &trans    &trans  RSH(C_BRI_UP)  &none
                        >;
                };

// --(layer template)------------------------------------------------------------------
//                 some_layer {
//                         bindings = <
// // ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
// // │     │     │     │     │     │     │   │     │     │     │     │     │     │
// // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// // │     │     │     │     │     │     │   │     │     │     │     │     │     │
// // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// // │     │     │     │     │     │     │   │     │     │     │     │     │     │
// // └─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
// //                   │     │     │     │   │     │     │     │
// //                   └─────┴─────┴─────┘   └─────┴─────┴─────┘
//    &none  &none &none &none &none &none      &none &none &none &none &none  &none
//    &none  &none &none &none &none &none      &none &none &none &none &none  &none
//    &none  &none &none &none &none &none      &none &none &none &none &none  &none
//                       &none  &none  &none  &none  &none  &none
//                         >;
//                 };
        };
};

