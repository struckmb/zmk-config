/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "custom_keys.h"

&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";
        combo_N3 {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp DE_N3>;
        };

         /* combo_tab { */
         /*    timeout-ms = <50>; */
         /*    key-positions = <10 11>; */
         /*    bindings = <&kp TAB>; */
        /* }; */

         /*    combo_ralt { */
         /*    timeout-ms = <50>; */
         /*    key-positions = <17 16>; */
         /*    bindings = <&kp RALT>; */
        /* }; */

         /*            combo_lalt { */
         /*    timeout-ms = <50>; */
         /*    key-positions = <11 12>; */
         /*    bindings = <&kp LALT>; */
        /* }; */

         /*                   combo_lgui { */
         /*    timeout-ms = <50>; */
         /*    key-positions = <12 13>; */
         /*    bindings = <&kp LGUI>; */
        /* }; */


       /* combo_rgui { */
         /*    timeout-ms = <50>; */
         /*    key-positions = <17 18>; */
         /*    bindings = <&kp RGUI>; */
        /* }; */



    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                // ---------------------------------------------------------------------------------------------------------
                // |    Q    |    W    |    E    |    R    |    T    |   |   DeZ   |    U    |    I    |    O    |    P    |
                // |    A    |    S    |    D    |    F    |    G    |   |    H    |    J    |    K    |    L    |    ;    |
                // | Sft/DeY |    X    |    C    |    V    |    B    |   |    N    |    M    |    ,    |    .    | Sft/Ret |
                //                               |   Ly1   |   Ctl   |   |  Space  |   Ly2   |
                &kp DE_Q     &kp DE_W     &kp DE_E     &kp DE_R     &kp DE_T         &kp DE_Y     &kp DE_U     &kp DE_I     &kp DE_O     &kp DE_P
                &kp DE_A     &kp DE_S     &kp DE_D     &kp DE_F     &kp DE_G         &kp DE_H     &kp DE_J     &kp DE_K     &kp DE_L    &kp DE_SEMI
                &mt LSHIFT DE_Z  &kp DE_X  &kp DE_C    &kp DE_V     &kp DE_B         &kp DE_N     &kp DE_M   &kp DE_COMMA  &kp DE_DOT  &mt LSHIFT RET
                &mo 1   &kp LCTRL     &kp SPACE    &mo 2
                >;
        };

        left_layer {
            bindings = <
                &kp N1  &kp N2    &kp N3    &kp N4    &kp N5        &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 
                &kp TAB    &kp LC(S)    &kp DQT      &kp PIPE2     &kp HASH         &kp MINUS &kp EQUAL  &kp LBKT &kp RBKT  &kp DEL 
                &kp ESC    &kp TILDE     &kp NON_US_BSLH &kp NON_US_HASH  &kp TILDE2     &kp MINUS &kp GRAVE &kp LBKT &kp RBKT  &kp DEL 
                &mo 1  &kp LGUI                      &kp RGUI &mo 2 
                >;
        };

        right_layer {
            bindings = <
                &kp EXCL  &kp AT &kp HASH  &kp DLLR  &kp PRCNT                &kp CARET  &kp AMPS &kp KP_MULTIPLY &kp LPAR &kp RPAR 
                &kp HASH  &kp QMARK  &kp FSLH  &kp COLON  &kp SEMI             &kp MINUS &kp KP_EQUAL  &kp LBRC  &kp RBRC   &kp BSPC
                &kp LSHIFT  &kp KP_PLUS &kp LBKT &kp RBKT   &kp BSLH                &kp UNDER &kp LEFT &kp DOWN &kp UP  &kp RIGHT
                &mo 3 &kp LCTRL                  &kp SPACE  &mo 2 
                >;
        };

        tri_layer {
            bindings = <
                &kp N1  &kp N2    &kp N3    &kp N4    &kp N5             &trans &trans   &trans   &trans  &trans
                &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                          &trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
                &bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7                   &trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
                &trans &trans                      &trans &trans 
                >;
        };

    };
};
